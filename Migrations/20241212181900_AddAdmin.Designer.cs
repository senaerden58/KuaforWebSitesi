// <auto-generated />
using System;
using KuaforWebSitesi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KuaforWebSitesi.Migrations
{
    [DbContext(typeof(KuaforDBContext))]
    [Migration("20241212181900_AddAdmin")]
    partial class AddAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KuaforWebSitesi.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("AdminMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            AdminID = 1,
                            AdminMail = "b211210041@sakarya.edu.tr",
                            AdminSifre = "sau"
                        });
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Calisan", b =>
                {
                    b.Property<int>("CalisanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanID"));

                    b.Property<string>("CalisanAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalisanMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalisanSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalisanSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalisanTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CalisanID");

                    b.ToTable("Calisanlar");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.CalisanGun", b =>
                {
                    b.Property<int>("CalisanGunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanGunID"));

                    b.Property<int>("CalisanID")
                        .HasColumnType("int");

                    b.Property<int>("GunID")
                        .HasColumnType("int");

                    b.HasKey("CalisanGunID");

                    b.HasIndex("CalisanID");

                    b.HasIndex("GunID");

                    b.ToTable("CalisanGunler");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.CalisanHizmetler", b =>
                {
                    b.Property<int>("CalisanHizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanHizmetID"));

                    b.Property<int>("CalisanID")
                        .HasColumnType("int");

                    b.Property<int>("HizmetID")
                        .HasColumnType("int");

                    b.HasKey("CalisanHizmetID");

                    b.HasIndex("CalisanID");

                    b.HasIndex("HizmetID");

                    b.ToTable("CalisanHizmetler");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Gunler", b =>
                {
                    b.Property<int>("GunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GunID"));

                    b.Property<string>("GunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GunID");

                    b.ToTable("Gunler");

                    b.HasData(
                        new
                        {
                            GunID = 1,
                            GunAdi = "Pazartesi"
                        },
                        new
                        {
                            GunID = 2,
                            GunAdi = "Salı"
                        },
                        new
                        {
                            GunID = 3,
                            GunAdi = "Çarşamba"
                        },
                        new
                        {
                            GunID = 4,
                            GunAdi = "Perşembe"
                        },
                        new
                        {
                            GunID = 5,
                            GunAdi = "Cuma"
                        },
                        new
                        {
                            GunID = 6,
                            GunAdi = "Cumartesi"
                        },
                        new
                        {
                            GunID = 7,
                            GunAdi = "Pazar"
                        });
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.HizmetKategori", b =>
                {
                    b.Property<int>("HizmetKategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HizmetKategoriID"));

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HizmetKategoriID");

                    b.ToTable("HizmetKategoriler");

                    b.HasData(
                        new
                        {
                            HizmetKategoriID = 1,
                            KategoriAdi = "Saç Kesimi"
                        },
                        new
                        {
                            HizmetKategoriID = 2,
                            KategoriAdi = "Saç Bakımı"
                        },
                        new
                        {
                            HizmetKategoriID = 3,
                            KategoriAdi = "Manikür"
                        },
                        new
                        {
                            HizmetKategoriID = 4,
                            KategoriAdi = "Pedikür"
                        },
                        new
                        {
                            HizmetKategoriID = 5,
                            KategoriAdi = "Gelin"
                        });
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Hizmetler", b =>
                {
                    b.Property<int>("HizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HizmetID"));

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HizmetAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HizmetKategoriID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Sure")
                        .HasColumnType("time");

                    b.HasKey("HizmetID");

                    b.HasIndex("HizmetKategoriID");

                    b.ToTable("Hizmetler");

                    b.HasData(
                        new
                        {
                            HizmetID = 1,
                            Fiyat = 400m,
                            HizmetAdi = "Fön",
                            HizmetKategoriID = 2,
                            Sure = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 2,
                            Fiyat = 800m,
                            HizmetAdi = "Maşa",
                            HizmetKategoriID = 2,
                            Sure = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 3,
                            Fiyat = 1000m,
                            HizmetAdi = "Örgü",
                            HizmetKategoriID = 2,
                            Sure = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 4,
                            Fiyat = 1200m,
                            HizmetAdi = "Topuz",
                            HizmetKategoriID = 2,
                            Sure = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 5,
                            Fiyat = 1300m,
                            HizmetAdi = "Saç Kesim",
                            HizmetKategoriID = 2,
                            Sure = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 6,
                            Fiyat = 2500m,
                            HizmetAdi = "Cila",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 0, 45, 0, 0)
                        },
                        new
                        {
                            HizmetID = 7,
                            Fiyat = 1250m,
                            HizmetAdi = "Dip Boya",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 8,
                            Fiyat = 1750m,
                            HizmetAdi = "Transparan Boya",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 1, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 9,
                            Fiyat = 2500m,
                            HizmetAdi = "Bütün Boya",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 2, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 10,
                            Fiyat = 5500m,
                            HizmetAdi = "Brushlight",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 11,
                            Fiyat = 6000m,
                            HizmetAdi = "Highlight",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 5, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 12,
                            Fiyat = 8000m,
                            HizmetAdi = "Röfle",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 5, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 13,
                            Fiyat = 4000m,
                            HizmetAdi = "Sakinleştirici Bakım",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            HizmetID = 14,
                            Fiyat = 6000m,
                            HizmetAdi = "Düzleştirici Bakım",
                            HizmetKategoriID = 1,
                            Sure = new TimeSpan(0, 2, 30, 0, 0)
                        },
                        new
                        {
                            HizmetID = 15,
                            Fiyat = 6000m,
                            HizmetAdi = "Gelin Saçı",
                            HizmetKategoriID = 5,
                            Sure = new TimeSpan(0, 3, 0, 0, 0)
                        },
                        new
                        {
                            HizmetID = 16,
                            Fiyat = 6000m,
                            HizmetAdi = "Gelin Makyajı",
                            HizmetKategoriID = 5,
                            Sure = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            HizmetID = 17,
                            Fiyat = 750m,
                            HizmetAdi = "Manikür",
                            HizmetKategoriID = 3,
                            Sure = new TimeSpan(0, 0, 45, 0, 0)
                        },
                        new
                        {
                            HizmetID = 18,
                            Fiyat = 750m,
                            HizmetAdi = "Pedikür",
                            HizmetKategoriID = 3,
                            Sure = new TimeSpan(0, 0, 45, 0, 0)
                        },
                        new
                        {
                            HizmetID = 19,
                            Fiyat = 550m,
                            HizmetAdi = "El Kalıcı Oje",
                            HizmetKategoriID = 3,
                            Sure = new TimeSpan(0, 0, 45, 0, 0)
                        },
                        new
                        {
                            HizmetID = 20,
                            Fiyat = 750m,
                            HizmetAdi = "Ayak Kalıcı Oje",
                            HizmetKategoriID = 3,
                            Sure = new TimeSpan(0, 0, 45, 0, 0)
                        },
                        new
                        {
                            HizmetID = 21,
                            Fiyat = 2500m,
                            HizmetAdi = "Profesyonel Cilt Bakımı",
                            HizmetKategoriID = 4,
                            Sure = new TimeSpan(0, 1, 30, 0, 0)
                        },
                        new
                        {
                            HizmetID = 22,
                            Fiyat = 400m,
                            HizmetAdi = "Kaş Alımı",
                            HizmetKategoriID = 4,
                            Sure = new TimeSpan(0, 0, 20, 0, 0)
                        },
                        new
                        {
                            HizmetID = 23,
                            Fiyat = 1250m,
                            HizmetAdi = "Kirpik Lifting",
                            HizmetKategoriID = 4,
                            Sure = new TimeSpan(0, 0, 45, 0, 0)
                        },
                        new
                        {
                            HizmetID = 24,
                            Fiyat = 1500m,
                            HizmetAdi = "Karbon Peeling",
                            HizmetKategoriID = 4,
                            Sure = new TimeSpan(0, 0, 45, 0, 0)
                        });
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Musteri", b =>
                {
                    b.Property<int>("MusteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriID"));

                    b.Property<string>("MusteriAd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MusteriMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriID");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuID"));

                    b.Property<int?>("CalisanID")
                        .HasColumnType("int");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HizmetID")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Saat")
                        .HasColumnType("time");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("RandevuID");

                    b.HasIndex("CalisanID");

                    b.HasIndex("HizmetID");

                    b.HasIndex("MusteriID");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.CalisanGun", b =>
                {
                    b.HasOne("KuaforWebSitesi.Models.Calisan", "Calisanlar")
                        .WithMany("CalisanGunler")
                        .HasForeignKey("CalisanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KuaforWebSitesi.Models.Gunler", "Gunler")
                        .WithMany("CalisanGunler")
                        .HasForeignKey("GunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisanlar");

                    b.Navigation("Gunler");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.CalisanHizmetler", b =>
                {
                    b.HasOne("KuaforWebSitesi.Models.Calisan", "Calisan")
                        .WithMany("CalisanHizmetler")
                        .HasForeignKey("CalisanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KuaforWebSitesi.Models.Hizmetler", "Hizmet")
                        .WithMany("CalisanHizmetler")
                        .HasForeignKey("HizmetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Hizmet");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Hizmetler", b =>
                {
                    b.HasOne("KuaforWebSitesi.Models.HizmetKategori", "HizmetKategoriler")
                        .WithMany("Hizmetler")
                        .HasForeignKey("HizmetKategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HizmetKategoriler");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Randevu", b =>
                {
                    b.HasOne("KuaforWebSitesi.Models.Calisan", "Calisan")
                        .WithMany("Randevular")
                        .HasForeignKey("CalisanID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KuaforWebSitesi.Models.Hizmetler", "Hizmet")
                        .WithMany("Randevular")
                        .HasForeignKey("HizmetID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KuaforWebSitesi.Models.Musteri", "Musteri")
                        .WithMany("Randevular")
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Calisan");

                    b.Navigation("Hizmet");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Calisan", b =>
                {
                    b.Navigation("CalisanGunler");

                    b.Navigation("CalisanHizmetler");

                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Gunler", b =>
                {
                    b.Navigation("CalisanGunler");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.HizmetKategori", b =>
                {
                    b.Navigation("Hizmetler");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Hizmetler", b =>
                {
                    b.Navigation("CalisanHizmetler");

                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("KuaforWebSitesi.Models.Musteri", b =>
                {
                    b.Navigation("Randevular");
                });
#pragma warning restore 612, 618
        }
    }
}
